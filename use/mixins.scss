//  Set a rem FONT SIZE with pixel fallback
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// usage
p {
  @include font-size(14px)
}



// CSS3-PREFIX
 @mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -khtml-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value}
}

// usage
@include css3-prefix('property', value);



// BREAKPOINTS
@mixin bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}
@mixin bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}
@mixin bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

// usage
.sidebar {
  width: 60%;
  float: left;
  margin: 0 2% 0 0;
  @include bp-small {
    width: 100%;
    float: none;
    margin: 0;
  }
}



// ANIMATIONS & KEYFRAMES
@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
   @include css3-prefix('animation', $str);
}

@mixin rgba($hexcolor, $opacity) {
    background-color: $hexcolor;
    background-color: rgba($hexcolor, $opacity);
}

// usage
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}

.element {
  width: 100px;
  height: 100px;
  background: #000;
  @include animation('slide-down 5s 3');
}



// TRANSITION
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// usage
a {
  color: #ddd;
  @include transition(color .3s ease);
  &:hover {
    color: #000;
  }
}


// CROSS BROWSER OPACITY
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// usage
.faded-text {
  @include opacity(.8);
}


// CLEARFIX
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// usage
.container-with-floated-children {
  @extend %clearfix;
}

// OR
@mixin cfx() {
    &:after {content:".";display:block;clear:both;visibility:hidden;line-height:0;height:0}
}



// COLUMN
@mixin columns($count: 2, $gap: 0) {
    @include css3-prefix('column-count', $count);
    @include css3-prefix('column-gap', $gap);
}